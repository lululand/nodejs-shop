const Sequelize = require("sequelize").Sequelize;

const sequelize = require("../util/database"); // importing what we exported in our database.js. this is a fully configured sequelize env

const Product = sequelize.define("product", {
  id: {
    type: Sequelize.INTEGER,
    autoIncrement: true,
    allowNull: false,
    primaryKey: true,
  },
  title: Sequelize.STRING,
  price: {
    type: Sequelize.DOUBLE,
    allowNull: false,
  },
  imageUrl: {
    type: Sequelize.STRING,
    allowNull: false,
  },
  description: {
    type: Sequelize.STRING,
    allowNull: false,
  }
});

module.exports = Product;

// **************************************************
// ********** below was without sequelize **********
// **************************************************
// const db = require('../util/database.js');
// const Cart = require("./cart");

// module.exports = class Product {
//   constructor(id, title, imageURL, description, price) {
//     this.id = id;
//     this.title = title;
//     this.imageURL = imageURL;
//     this.description = description;
//     this.price = price;
//   }

//   save() {
//     return db.execute('INSERT INTO products (title, price, imageURL, description) VALUES (?, ?, ?, ?)', [this.title, this.price, this.imageURL, this.description]); // db gives the access to the db connection pool. don't need to specify id because that will be generated by the db
//   }

//   static deleteById(id) {

//   }

//   static fetchAll() {
//     return db.execute('SELECT * FROM products');
//     // getProductsFromFile(cb);
//   }

//   static findById(id) {
//     return db.execute('SELECT * FROM products WHERE products.id = ?', [id]);
//   }
// };
